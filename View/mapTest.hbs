<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Draggable directions</title>
    <style>
        #right-panel {
            font-family: 'Roboto', 'sans-serif';
            line-height: 30px;
            padding-left: 10px;
        }

        #right-panel select, #right-panel input {
            font-size: 15px;
        }

        #right-panel select {
            width: 100%;
        }

        #right-panel i {
            font-size: 12px;
        }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #map {
            height: 100%;
            float: right;
            width: 63%;
            height: 100%;
        }

        #right-panel {
            float: left;
            width: 34%;
            height: 100%;
        }

        .panel {
            height: 100%;
            overflow: auto;
        }
    </style>
</head>
<body>
<div id="map"></div>
<div id="right-panel">
    <p>Total Distance: <span id="total"></span></p>
</div>
<script>
    var responseData = null;
    var map = null;
    var directionsService = null;
    var directionsDisplay = null;
    var origin = '5070 Cambie Street, Vancouver, BC V5Z 2Z5';
    var destination = '';
    var wayPoints = [];
    function initMap() {
        var centerPan = {lat: 49.23957, lng: -123.11662}; // 5070 cambie St.

        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 16,
            center: centerPan
        });

        var marker = new google.maps.Marker({
            position: centerPan,
            map: map,
            title: 'Click to zoom'
        });

        directionsService = new google.maps.DirectionsService;
        directionsDisplay = new google.maps.DirectionsRenderer({
            suppressPolylines: true,
            preserveViewport: true,
            map: map,
            panel: document.getElementById('right-panel')
        });

        directionsDisplay.addListener('directions_changed', function () {
            computeTotalDistance(directionsDisplay.getDirections());
        });

        map.addListener('click', function (e) {
            if (destination !== '') {
//                var wayPoint = {location: destination, stopover: false};
//                wayPoints.push(wayPoint);
                origin = destination;
//                addMarker(origin);
            }
            destination = e.latLng;
            displayRoute(origin, destination, wayPoints, directionsService, directionsDisplay);
        });

        // displayRoute(origin, destination, wayPoints, directionsService, directionsDisplay);
    }

    function addMarker(position) {
        var marker = new google.maps.Marker({
            position: position,
            icon: '/image/routeMarker.png',
            map: map
        });
    }

    function displayRoute(origin, destination, wayPoints, service, display) {
        service.route({
            origin: origin,
            destination: destination,
            waypoints: wayPoints,
            travelMode: google.maps.DirectionsTravelMode.WALKING
        }, function (response, status) {
            if (status === 'OK') {
                if (responseData === null) {
                    responseData = response;
                } else {
                    responseData.routes[0].legs[0].end_address = response.routes[0].legs[0].end_address;
                    responseData.routes[0].legs[0].end_location = response.routes[0].legs[0].end_location;
                    // addMarker(responseData.routes[0].legs[0].steps[responseData.routes[0].legs[0].steps.length-1].end_location);
                    for (var i = 0; i < response.routes[0].legs[0].steps.length; i++) {
                        responseData.routes[0].legs[0].steps.push(response.routes[0].legs[0].steps[i]);
                    }
                }

                display.setDirections(responseData);
                renderDirectionsPolylines(responseData);
            } else {
                alert('Could not display directions due to: ' + status);
            }
        });
    }

    var polylineOptions = {
        strokeColor: '#C83939',
        strokeOpacity: 1,
        strokeWeight: 4
    };
    var polylines = [];
    function renderDirectionsPolylines(response) {
        for (var i = 0; i < polylines.length; i++) {
            polylines[i].setMap(null);
        }
        var legs = response.routes[0].legs;
        for (i = 0; i < legs.length; i++) {
            var steps = legs[i].steps;
            for (j = 0; j < steps.length; j++) {
                var nextSegment = steps[j].path;
                var stepPolyline = new google.maps.Polyline(polylineOptions);
                for (k = 0; k < nextSegment.length; k++) {
                    stepPolyline.getPath().push(nextSegment[k]);
                }
                polylines.push(stepPolyline);
                stepPolyline.setMap(map);
                // route click listeners, different one on each step
                google.maps.event.addListener(stepPolyline, 'click', function (evt) {
                    if (destination !== '') {
                        origin = destination;
                    }
                    destination = evt.latLng;
                    displayRoute(origin, destination, wayPoints, directionsService, directionsDisplay);
                })
            }
        }
    }

    function computeTotalDistance(result) {
        var total = 0;
        var myroute = result.routes[0];
        for (var i = 0; i < myroute.legs.length; i++) {
            total += myroute.legs[i].distance.value;
        }
        total = total / 1000;
        document.getElementById('total').innerHTML = total + ' km';
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBvdF8y8unpwSzEBnMn0buUp_Yaqm3_5q8&callback=initMap">
</script>
</body>
</html>
